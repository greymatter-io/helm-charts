kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: catalog
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: catalog
      deployment: catalog
  replicas: 1
  template:
    metadata:
      labels:
        app: catalog
        deployment: catalog
    spec:
      serviceAccountName: {{ .Values.global.waiter.serviceAccount.name }}
      initContainers:
        - name: ensure-gm-control
          image: {{ .Values.global.waiter.image }}
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE
              value: control
            - name: POST_DELAY
              value: "10"
        {{- if .Values.global.consul.enabled }}
        - name: consul
          image: consul:1.5.0
          imagePullPolicy: IfNotPresent
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          command: ["/bin/sh", "-ec"]
          args:
            - "/bin/consul services register \
              -http-addr={{ .Values.global.consul.consul_hostport }} \
              -name=catalog -address=$(POD_IP) \
              -port={{ .Values.global.services.edge.port }} \
              -tag tbn-cluster \
              -meta metrics=8081"
        {{- end }}
      containers:
        - name: catalog
          image: {{ tpl .Values.catalog.image $ }}
          imagePullPolicy: {{ .Values.catalog.imagePullPolicy }}
          {{- if .Values.catalog.resources }}
          resources:
{{ toYaml .Values.catalog.resources | indent 12 }}
          {{- end }}
          env:
          {{- include "envvars" (dict "envvar" .Values.catalog.envvars "top" $) | indent 10 }}
          {{- if and $.Values.global.services.catalog.egressTLS }}
          volumeMounts:
            - name: certs
              mountPath: /etc/pki
          {{- end }}
        - name: sidecar
          image: {{ tpl $.Values.sidecar.image $ }}
          imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
          {{- if .Values.sidecar.resources }}
          resources:
{{ toYaml .Values.sidecar.resources | indent 12 }}
          {{- end }}
          ports:
            - name: proxy
              containerPort: 8080
            - name: metrics
              containerPort: 8081
          env:
          {{- include "greymatter.envvars" $ | indent 10 }}
          {{- if .Values.global.spire.enabled }}
          volumeMounts:
          {{- include "sidecar_volume_mounts" . | indent 10 }}
          {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
          volumeMounts:
          {{- include "sidecar_volume_certs_mount" . | indent 10 }}
          {{- end }}
      {{- if .Values.global.spire.enabled }}
      volumes:
      {{- include "sidecar_volumes" . | indent 6 }}
        {{- if and $.Values.global.services.catalog.egressTLS }}
        - name: certs
          secret:
            secretName: sidecar-certs
        {{- end }}
      {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
      volumes:
      {{- include "sidecar_certs_volumes" . | indent 6 }}
        {{- if and $.Values.global.services.catalog.egressTLS }}
      - name: certs
        secret:
          secretName: sidecar-certs
        {{- end }}
      {{- else if and $.Values.global.services.catalog.egressTLS }}
      volumes:
        - name: certs
          secret:
            secretName: sidecar-certs
      {{- end }}
      imagePullSecrets:
        - name: docker.secret
        - name: dev.docker.secret
