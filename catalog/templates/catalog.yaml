kind: Deployment
apiVersion: apps/v1
metadata:
  name: catalog
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: catalog
      deployment: catalog
  replicas: 1
  template:
    metadata:
      labels:
        app: catalog
        deployment: catalog
    spec:
      serviceAccountName: {{ .Values.global.waiter.serviceAccount.name }}
      initContainers:
        - name: ensure-gm-control
          image: {{ .Values.global.waiter.image }}
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE
              value: control
            - name: POST_DELAY
              value: "10"
      containers:
        - name: catalog
          image: {{ tpl .Values.catalog.image $ }}
          imagePullPolicy: {{ .Values.catalog.imagePullPolicy }}
          {{- if .Values.catalog.resources }}
          resources:
{{ toYaml .Values.catalog.resources | indent 12 }}
          {{- end }}
          env:
          {{- include "envvars" (dict "envvar" .Values.catalog.envvars "top" $) | indent 10 }}
          {{- if and $.Values.global.services.catalog.egressTLS }}
          volumeMounts:
            - name: certs
              mountPath: /etc/pki
          {{- end }}

        - name: sidecar
          image: {{ tpl $.Values.sidecar.image $ }}
          imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
          {{- if .Values.sidecar.resources }}
          resources:
{{ toYaml .Values.sidecar.resources | indent 12 }}
          {{- end }}
          ports:
            - name: proxy
              containerPort: 8080
            - name: metrics
              containerPort: 8081
          env:
          {{- include "greymatter.envvars" $ | indent 10 }}
          {{- if .Values.global.spire.enabled }}
          volumeMounts:
          {{- include "sidecar_volume_mounts" . | indent 10 }}
          {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
          volumeMounts:
          {{- include "sidecar_volume_certs_mount" . | indent 10 }}
          {{- end }}
        {{- if .Values.global.consul.enabled }}
        {{- $data := dict "Values" .Values "ServiceName" "catalog" }}
        {{- include "consul.agent" $data | nindent 8 }}
        {{- end }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "curl -k --cacert /etc/proxy/tls/sidecar/ca.crt --key /etc/proxy/tls/sidecar/server.key --cert /etc/proxy/tls/sidecar/server.crt https://localhost:9080/summary"
            initialDelaySeconds: 20
            periodSeconds: 5

      volumes:
      {{- if .Values.global.consul.enabled }}
      - name: data-consul
        emptyDir: {}
      - name: config-consul
        emptyDir: {}
      {{- end }}
      {{- if .Values.global.spire.enabled }}
      {{- include "sidecar_volumes" . | indent 6 }}
        {{- if and $.Values.global.services.catalog.egressTLS }}
      - name: certs
        secret:
          secretName: sidecar-certs
        {{- end }}
      {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
      {{- include "sidecar_certs_volumes" . | indent 6 }}
        {{- if and $.Values.global.services.catalog.egressTLS }}
      - name: certs
        secret:
          secretName: sidecar-certs
        {{- end }}
      {{- else if and $.Values.global.services.catalog.egressTLS }}
        - name: certs
          secret:
            secretName: sidecar-certs
      {{- end }}
      imagePullSecrets:
        - name: docker.secret
        - name: dev.docker.secret
