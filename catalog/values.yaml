global:
  environment: kubernetes
  domain:
  route_url_name:
  remove_namespace_from_url: false
  zone: zone-default-zone
  catalog:
    name: catalog
    version: 1.0.3
    data_prefix: /data
  dashboard:
    version: 3.1.0
  data:
    version: 1.0.0
  documentation:
    version: 3.0.0
  edge:
    version: 0.8.1
  exhibitor:
    replicas: 1
    version:
  jwt:
    version: 1.0.0
  slo:
    version: 1.0.0
  xds:
    cluster: greymatter
    port: 18000
    version: 0.2.6
  waiter:
    serviceAccount:
      Name: waiter
    image: deciphernow/k8s-waiter:latest
  control:
    name: control
    port: 50000
  services:
    catalog:
      egressTLS: false
  consul:
    enabled: false
    host: ''
    port: 8500

catalog:
  name: catalog
  version: 1.0.3
  image: docker.production.deciphernow.com/deciphernow/gm-catalog:{{ $.Values.global.catalog.version }}
  debug: 'true'
  imagePullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi
  port: 9080

  envvars:
    config_source:
      type: value
      value: 'gmdata'
    config_polling_interval:
      type: value
      value: '30s'
    port:
      type: value
      value: '9080'
    control_server_0_address:
      type: value
      value: '{{ .Values.global.control.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.control.port }}'
    control_server_0_zone_name:
      type: value
      value: 'zone-default-zone'
    control_server_0_request_cluster_name:
      type: value
      value: 'edge'
    use_tls:
      type: value
      value: 'true'
    ca_cert_path:
      type: value
      value: '/etc/pki/ca.crt'
    server_cert_path:
      type: value
      value: '/etc/pki/server.crt'
    server_key_path:
      type: value
      value: '/etc/pki/server.key'
    client_address:
      type: value
      value: localhost
    client_port:
      type: value
      value: '8080'
    client_prefix:
      type: value
      value: '/data'
    client_use_tls:
      type: value
      value: 'true'
    client_cert:
      type: secret
      secret: sidecar-certs
      key: server_b64
    client_key:
      type: secret
      secret: sidecar-certs
      key: key_b64
    client_trust:
      type: secret
      secret: sidecar-certs
      key: ca_b64
    gmdata_startup_delay:
      type: value
      value: '10s'
    gmdata_max_retries:
      type: value
      value: '100'
    gmdata_retry_delay:
      type: value
      value: '5s'
    gmdata_root_event_name:
      type: value
      value: 'world'
    client_identity:
      type: value
      value: 'CN=gm-control,OU=Engineering,O=Decipher Technology Studios,=Alexandria,=Virginia,C=US'
    client_email:
      type: value
      value: 'gm-control@deciphernow.com'

  init:
    image: 'docker.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
    imagePullPolicy: IfNotPresent
    envvars:
      debug:
        type: 'value'
        value: 'false'
      catalog_api_host:
        type: 'value'
        value: '{{ .Values.catalog.name }}:{{ .Values.catalog.port }}'
      use_tls:
        type: value
        value: '{{ $.Values.global.services.catalog.egressTLS | default false }}'

sidecar:
  version: '{{- $.Values.global.catalog.sidecar.version | default $.Values.global.sidecar.version }}'
  image: 'docker.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
  imagePullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  envvars:
    xds_cluster:
      type: value
      value: 'catalog'
    kafka_topic:
      type: value
      value: 'gm-catalog'

  # Set this to true if you are attempting to deploy Catalog by itself.
  # Ideally, catalog is deployed as a dependency to Grey Matter, which creates the
  # sidecar secret, but if individual testing is being done, the sidecar secret will
  # need to be created.
  create_sidecar_secret: false
  certificates:
    name: sidecar
    ca: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    cert: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    key: |-
      -----BEGIN RSA PRIVATE KEY-----
      ...
      -----END RSA PRIVATE KEY-----
