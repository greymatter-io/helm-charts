global:
  environment: openshift
  domain:
  route_url_name:
  remove_namespace_from_url: false
  catalog:
    version: 0.3.6
  dashboard:
    version: 2.5.0
  data:
    version: 0.2.3
  documentation:
    version: 3.0.0
  edge:
    version: 0.7.1
  exhibitor:
    replicas: 1
    version:
  jwt:
    version: 0.2.0
  slo:
    version: 0.4.0
  xds:
    cluster: greymatter
    port: 18000
    version: 0.2.6

catalog:
  image: docker.production.deciphernow.com/deciphernow/gm-catalog:{{ $.Values.global.catalog.version }}
  source: xds
  debug: 'false'
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 200m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

  port: 9080

  services:
    service_0:
      capability: 'Grey Matter'
      documentation: '/services/catalog/{{ $.Values.global.catalog.version }}/'
      name: 'Grey Matter Catalog'
      owner: 'Decipher'
      version: '{{ $.Values.global.catalog.version | trunc 3 }}'
      zookeeper_announcement_point: '/services/catalog/{{ $.Values.global.catalog.version }}/metrics'

    service_1:
      capability: 'Grey Matter'
      documentation: ''
      name: 'Grey Matter Control'
      owner: 'Decipher'
      version: '{{ $.Values.global.xds.version | trunc 3 }}'
      zookeeper_announcement_point: '/services/xds/{{ $.Values.global.xds.version }}/metrics'

    service_2:
      capability: 'Grey Matter'
      documentation: ''
      name: 'Grey Matter Dashboard'
      owner: 'Decipher'
      version: '{{ $.Values.global.dashboard.version | trunc 3 }}'
      zookeeper_announcement_point: '/services/dashboard/latest/metrics'

    service_3:
      capability: 'Grey Matter'
      documentation: '/services/data/{{ .Values.global.data.version }}/static/ui/index.html'
      name: 'Grey Matter Data'
      owner: 'Decipher'
      version: '{{ $.Values.global.data.version | trunc 3 }}'
      zookeeper_announcement_point: '/services/data/{{ $.Values.global.data.version }}/metrics'

    service_4:
      capability: 'Grey Matter'
      documentation: ''
      name: 'Grey Matter JWT Security'
      owner: 'Decipher'
      version: '{{ $.Values.global.jwt.version | trunc 3 }}'
      zookeeper_announcement_point: '/services/jwt-security/{{ $.Values.global.jwt.version }}/metrics'

    service_5:
      capability: 'Grey Matter'
      documentation: ''
      name: 'Grey Matter Edge'
      owner: 'Decipher'
      version: '{{ $.Values.global.edge.version | trunc 3 }}'
      zookeeper_announcement_point: '/services/edge/{{ $.Values.global.edge.version }}/metrics'

    service_6:
      capability: 'Grey Matter'
      documentation: ''
      name: 'Grey Matter Service Level Objectives'
      owner: 'Decipher'
      version: '{{ $.Values.global.slo.version | trunc 3 }}'
      zookeeper_announcement_point: '/services/slo/{{ $.Values.global.slo.version }}/metrics'

    service_7:
      capability: 'Grey Matter'
      documentation: '/services/documentation/{{ $.Values.global.documentation.version }}/'
      name: 'Grey Matter Documentation'
      owner: 'Decipher'
      version: '{{ $.Values.global.documentation.version | trunc 3 }}'
      zookeeper_announcement_point: '/services/documentation/{{ $.Values.global.documentation.version }}/metrics'

sidecar:
  version: 0.7.1
  image: 'docker.production.deciphernow.com/deciphernow/gm-proxy:{{ $.Values.sidecar.version }}'
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  envvars:
    port:
      type: 'value'
      value: '8080'
    service_port:
      type: 'value'
      value: '9080'
    kafka_topic:
      type: value
      value: 'gm-catalog'

  # Set this to true if you are attempting to deploy Catalog by itself.
  # Ideally, catalog is deployed as a dependency to Grey Matter, which creates the
  # sidecar secret, but if individual testing is being done, the sidecar secret will
  # need to be created.
  create_sidecar_secret: false
  certificates:
    name: sidecar
    ca: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    cert: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    key: |-
      -----BEGIN RSA PRIVATE KEY-----
      ...
      -----END RSA PRIVATE KEY-----
