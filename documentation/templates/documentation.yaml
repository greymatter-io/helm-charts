apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.documentation.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.documentation.name }}
      deployment: {{ .Values.documentation.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.documentation.name }}
        deployment: {{ .Values.documentation.name }}
    spec:
      containers:
        - name: {{ .Values.documentation.name }}
          image: {{ .Values.documentation.image | quote }}
          imagePullPolicy: {{ .Values.documentation.imagePullPolicy }}
          env:
      {{- range $envvar := .Values.documentation.envvars }}
        {{- $envName := $envvar.name | upper | replace "." "_" | replace "-" "_" }}
          {{- if eq $envvar.type "secret" }}
          - name: {{ $envName }}
            valueFrom:
              secretKeyRef:
                name: {{ $envvar.secret }}
                key: {{ $envvar.key }}
          {{- else if eq $envvar.type "value" }}
          - name: {{ $envName }}
            value: {{ tpl $envvar.value $ | quote }}
          {{- end }}
      {{- end  }} 
          ports:
            - containerPort: 8090
              name: http
        - name: sidecar
          image: {{ tpl .Values.sidecar.image $ | quote }}
          imagePullPolicy: IfNotPresent
          env:
          {{- include "greymatter.envvars" . | indent 10 }}
          ports:
            - containerPort: 8080
              name: proxy
              protocol: TCP
            - containerPort: 8081
              name: metrics
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          {{- if .Values.global.spire.enabled }}
          volumeMounts:
          {{- include "sidecar_volume_mounts" . | indent 10 }}
          {{- end }}
      {{- if .Values.global.spire.enabled }}
      volumes:
      {{- include "sidecar_volumes" . | indent 6 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: docker.secret
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30