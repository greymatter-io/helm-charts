apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: spire-agent
  namespace: {{ .Release.Namespace }}
  labels:
    app: spire-agent
spec:
  selector:
    matchLabels:
      app: spire-agent
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app: spire-agent
        # openshift.io/scc=spire-scc
    spec:
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: {{ .Values.spire.agent.serviceAccount.name }}
      initContainers:
        # We use this workaround to fix the issue that Kubernetes HostPath volumes are by default root only: https://github.com/kubernetes/minikube/issues/1990#issuecomment-445033074
        # - name: setup-mountpath
        #   image: alpine:latest
        #   command: ['sh', '-c', 'echo "UID: $(id -u)"; id; mkdir -p /run/spire/sockets; stat /run/spire/sockets; chown 20000 /run/spire/sockets' ]
        #   volumeMounts:
        #     - name: spire-agent-socket
        #       mountPath: /run/spire
        #       readOnly: false
        - name: ensure-spire-server
          image: deciphernow/k8s-waiter
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE
              value: {{ .Values.spire.server.name }}
      containers:
        - name: spire-agent
          image: {{ .Values.spire.agent.image }}
          args: ["-config", "/run/spire/config/agent.conf"]
          volumeMounts:
            - name: spire-config
              mountPath: /run/spire/config
              readOnly: true
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: false
          # We need to set these so that OpenShift can work
          # securityContext:
            # fsGroup: 20000
            # fsGroup: 0?
            # runAsUser: 20000
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "/opt/spire/bin/spire-agent api fetch -socketPath /run/spire/sockets/agent.sock 2>&1 | grep -vqE 'connection refused|no such file or directory'"
            failureThreshold: 2
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
      volumes:
        - name: spire-config
          configMap:
            name: spire-agent
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
