apiVersion: apps/v1
kind: StatefulSet
metadata:
  serviceName:  {{ .Values.spire.server.name }}
  name:  {{ .Values.spire.server.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app:  {{ .Values.spire.server.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.spire.server.name }}
  serviceName: {{ .Values.spire.server.name }}
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app: {{ .Values.spire.server.name }}
    spec:
      serviceAccountName: {{ .Values.spire.server.serviceAccount.name }}
      containers:
        - name: {{ .Values.spire.server.name }}
          image: {{ .Values.spire.server.image }}
          command: ["/tmp/bootstrap/bootstrap.sh"]
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: spire-config
              mountPath: {{ .Values.spire.server.configFileDir }}
              readOnly: true
            - name: spire-secrets
              mountPath: /run/spire/secrets
              readOnly: true
            - name: spire-data
              mountPath: /run/spire/data
              readOnly: false
            # - name: k8s-sa-cert
            #   mountPath: /run/k8s-certs/sa.pub
            #   readOnly: true
            # Registration API Unix socket
            # - name: registration-api-socket
            #   mountPath: {{ .Values.spire.server.registrationAPIDir }}
            # Bootstrap script volumes
            - name: service-list
              mountPath: /etc/config
            - name: bootstrap-script-volume
              mountPath: /tmp/bootstrap
          env:
            # The following environment variables are used by the spire bootstrap script to properly create registration entries
            - name: SERVICE_LIST_FILE
              value: /etc/config/services.txt
            - name: TRUST_DOMAIN
              value: {{ .Values.global.spire.trustDomain }}
            - name: KUBERNETES_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: CONFIG_FILE_PATH
              value: {{ .Values.spire.server.configFilePath }}
            - name: REGISTRATION_API_PATH
              value: {{ .Values.spire.server.registrationAPIPath }}
            - name: CLUSTER_NAME
              value: {{ .Values.spire.clusterName }}
            - name: AGENT_NAMESPACE
              value: {{.Release.Namespace}}
            - name: AGENT_SERVICEACCOUNT
              value: {{ .Values.spire.agent.serviceAccount.name }}
            
          livenessProbe:
            tcpSocket:
              port: 8081
            failureThreshold: 2
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
          readinessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 3
      volumes:
        # Spire server volumes
        - name: spire-config
          configMap:
            name: {{ .Values.spire.server.name }}
        - name: spire-secrets
          secret:
            secretName: {{ .Values.spire.server.name }}-key
        - name: spire-data
          emptyDir: {}
        # Uneeded: we're using the Kubernetes Token Review API
        # - name: k8s-sa-cert
        #   hostPath:
        #     # NOTE: Change to the kube-apiserver's service account certificate
        #     path: /var/lib/minikube/certs/sa.pub
        #     type: File
        # Registration API Unix socket
        # - name: registration-api-socket
        #   emptyDir: {}
        # Bootstrap script volumes
        - name: service-list
          configMap:
            name: service-list
        - name: bootstrap-script-volume
          configMap:
            name: {{.Values.spire.server.name}}-bootstrap-script
            defaultMode: 0777
        
  # Temporarily replaced PVC with emptyDIR to properly create new trust bundles from upstream CA on startup
  # volumeClaimTemplates:
  #   - metadata:
  #       name: spire-data
  #       namespace: {{ .Release.Namespace }}
  #     spec:
  #       accessModes:
  #         - ReadWriteOnce
  #       resources:
  #         requests:
  #           storage: 1Gi
