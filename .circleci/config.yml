# These are the expected environment variables
#
# The Nexus information is so that the build can push the packaged charts to the Decipher Helm repo
# NEXUS_URL
# NEXUS_PASSWORD
# NEXUS_USER
#
version: 2

jobs:
  build-staging:
    machine: true
    steps:
      - checkout
      - run:
          name: Set Environment Variable
          command: |
            echo "export NEXUS_URL=https://nexus.production.deciphernow.com/repository/helm-staging/" >> $BASH_ENV
      - run:
          name: Package and Publish Catalog
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/sense/catalog
      - run:
          name: Package and Publish Control
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/fabric/control
      - run:
          name: Package and Publish Data
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/data/gm-data
      - run:
          name: Package and Publish GM Control API
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/fabric/gm-control-api
      - run:
          name: Package and Publish Dashboard
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/sense/dashboard
      - run:
          name: Package and Publish JWT
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/data/jwt
      - run:
          name: Package and Publish JWT Gov
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/data/jwt-gov
      - run:
          name: Package and Publish Edge
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/edge
      - run:
          name: Package and Publish SLO
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/sense/slo
      - run:
          name: Package and Publish Spire
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/spire
  package-and-publish-greymatter-staging:
    machine: true
    steps:
      - checkout
      - run:
          name: Set Environment Variable
          command: |
            echo "export NEXUS_URL=https://nexus.production.deciphernow.com/repository/helm-staging/" >> $BASH_ENV
      - run:
          name: Change Grey Matter (fabric, sense, data) Requirements from local to helm-staging
          command: |
            sed -e "s|file:.*|$NEXUS_URL|" $(pwd)/fabric/requirements.yaml
            sed -e "s|file:.*|$NEXUS_URL|" $(pwd)/sense/requirements.yaml
            sed -e "s|file:.*|$NEXUS_URL|" $(pwd)/data/requirements.yaml
      - run:
          name: Print directory listing
          command: |
            ls -al $(pwd)
      - run:
          name: Package and Publish Fabric
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/fabric
      - run:
          name: Package and Publish Sense
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/sense
      - run:
          name: Package and Publish Data
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/data
      - run:
          name: Package and Publish Edge
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/edge
      - run:
          name: Package and Publish Spire
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/spire
  package-and-publish-core-hosted:
    machine: true
    steps:
      - checkout
      - run:
          name: Set Environment Variable
          command: |
            echo "export NEXUS_URL=https://nexus.production.deciphernow.com/repository/helm-hosted/" >> $BASH_ENV
      - run:
          name: Package and Publish Catalog
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/sense/catalog
      - run:
          name: Package and Publish Control
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/fabric/control
      - run:
          name: Package and Publish Data
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/data/data
      - run:
          name: Package and Publish GM Control API
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/fabric/gm-control-api
      - run:
          name: Package and Publish Dashboard
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/sense/dashboard
      - run:
          name: Package and Publish JWT
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/data/jwt
      - run:
          name: Package and Publish JWT Gov
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/data/jwt-gov
      - run:
          name: Package and Publish Edge
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/edge
      - run:
          name: Package and Publish SLO
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/sense/slo
      - run:
          name: Package and Publish Spire
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/spire
  package-and-publish-greymatter-hosted:
    machine: true
    steps:
      - checkout
      - run:
          name: Set Environment Variable
          command: |
            echo "export NEXUS_URL=https://nexus.production.deciphernow.com/repository/helm-hosted/" >> $BASH_ENV
      - run:
          name: Change Grey Matter (fabric, sense, data) Requirements from local to helm-hosted
          command: |
            sed -e "s|file:.*|$NEXUS_URL|" $(pwd)/fabric/requirements.yaml
            sed -e "s|file:.*|$NEXUS_URL|" $(pwd)/sense/requirements.yaml
            sed -e "s|file:.*|$NEXUS_URL|" $(pwd)/data/requirements.yaml
      - run:
          name: Package and Publish Fabric
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/fabric
      - run:
          name: Package and Publish Sense
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/sense
      - run:
          name: Package and Publish Data
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/data
      - run:
          name: Package and Publish Edge
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/edge
      - run:
          name: Package and Publish Spire
          command: |
            docker run --rm -e INPUT_NEXUS_URL=$NEXUS_URL -e INPUT_NEXUS_USER=$NEXUS_USER -e INPUT_NEXUS_PASS=$NEXUS_PASSWORD -v $(pwd):/helm deciphernow/helm-packager:latest /helm/spire
workflows:
  version: 2
  build-and-publish:
    jobs:
      - build-staging:
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore: /release-.*/
      - package-and-publish-greymatter-staging:
          requires:
            - build-staging
      - package-and-publish-core-hosted:
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore: /release-2.2/
              only: /release-.*/
      - package-and-publish-greymatter-hosted:
          requires:
            - package-and-publish-core-hosted
