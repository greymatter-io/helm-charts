kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: prometheus
      deployment: prometheus
  replicas: {{ .Values.prometheus.replica_count }}
  template:
    metadata:
      labels:
        app: prometheus
        deployment: prometheus
    spec:
      {{- if and .Values.global.environment (ne .Values.global.environment "openshift") }}
      securityContext:
        fsGroup: 65534
      {{- end }}  
      containers:
      - name: prometheus
        image: {{ .Values.prometheus.image | quote }}
        {{- if .Values.prometheus.resources }}
        resources:
{{ toYaml .Values.prometheus.resources | indent 10 }}
        {{- end }}
        ports:
        - name: internal
          containerPort: 9090
        command:
        - {{ .Values.prometheus.start_cmd | quote }}
        args:
        - "--query.timeout=4m"
        - "--query.max-samples=5000000000"
        - "--storage.tsdb.path={{ .Values.prometheus.data_mount_point }}/data"
        - "--config.file={{ .Values.prometheus.config_mount_point }}/prometheus.yaml"
        - "--web.console.libraries=/usr/share/prometheus/console_libraries"
        - "--web.console.templates=/usr/share/prometheus/consoles"
        - "--web.enable-admin-api"
        - "--web.external-url=https://{{ .Values.route_url_name }}.{{ .Release.Namespace }}.{{ .Values.DOMAIN }}/services/prometheus/{{ .Values.prometheus.version }}"
        - "--web.route-prefix=/"
        volumeMounts:
        - name: prometheus-configuration
          mountPath: {{ .Values.prometheus.config_mount_point }}
        - name: prometheus-data
          mountPath: {{ .Values.prometheus.data_mount_point }}
      
      - name: sidecar
        image: {{ tpl .Values.sidecar_prometheus.image $ }}
        imagePullPolicy: {{ .Values.prometheus.imagePullPolicy }}
        {{- if .Values.sidecar_prometheus.resources }}
        resources:
{{ toYaml .Values.sidecar_prometheus.resources | indent 10 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 8080
        - name: metrics
          containerPort: 8081
        env:
    {{- range $envvar := .Values.sidecar_prometheus.envvars }}
        {{- $envName := $envvar.name | upper | replace "." "_" | replace "-" "_" }}
        {{- if eq $envvar.type "secret" }}
        - name: {{ $envName }}
          valueFrom:
            secretKeyRef:
              name: {{ $envvar.secret }}
              key: {{ $envvar.key }}
        {{- else if eq $envvar.type "value" }}
        - name: {{ $envName }}
          value: {{ tpl $envvar.value $ | quote }}
        {{- end }}
    {{- end  }}
        - name: XDS_CLUSTER
          value: {{ .Values.global.xds.cluster | quote }}
        - name: XDS_HOST
          value: "xds.{{ .Release.Namespace }}.svc.cluster.local"
        - name: XDS_PORT
          value: {{ .Values.global.xds.port | quote }}
        - name: ZK_ADDRS
          value:  {{ template "greymatter.exhibitor.address" . }}
        - name: ZK_ANNOUNCE_PATH
          value: "/services/prometheus/{{ .Values.prometheus.version }}"
        volumeMounts:
        - name: sidecar
          mountPath: /etc/proxy/tls/sidecar
      imagePullSecrets:
      - name: docker.secret
      volumes:
      - name: prometheus-configuration
        configMap:
          name: prometheus
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus
      - name: sidecar
        secret:
          secretName: sidecar
