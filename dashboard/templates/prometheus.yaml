kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: prometheus
      deployment: prometheus
  replicas: {{ .Values.prometheus.replica_count }}
  template:
    metadata:
      labels:
        app: prometheus
        deployment: prometheus
    spec:
      serviceAccountName: control-sa
      {{- if ((.Values.global.spire.enabled) or (ne .Values.global.environment "openshift")) }}
      # Pod security contexts are propagated to their children volumes to allow r/w permissions
      # We only do this in openshift when spire is enabled because then it is running with a more relaxed security context constraint
      securityContext:
        fsGroup: 65534
      {{- end }}  
      initContainers:
      {{- if .Values.global.consul.enabled }}
      - name: consul
        image: consul:1.5.0
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        command: ["/bin/sh", "-ec"]
        args: 
          - "/bin/consul services register \
            -http-addr={{ .Values.global.consul.consul_hostport }} \
            -name=prometheus -address=$(POD_IP) \
            -port={{ .Values.global.services.edge.port }} \
            -tag tbn-cluster \
            -meta metrics=8081"
      {{- end }}
      containers:
      - name: prometheus
        image: {{ .Values.prometheus.image | quote }}
        {{- if .Values.prometheus.resources }}
        resources:
{{ toYaml .Values.prometheus.resources | indent 10 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 9090
        command:
        - {{ .Values.prometheus.start_cmd | quote }}
        args:
        - "--query.timeout=4m"
        - "--query.max-samples=5000000000"
        - "--storage.tsdb.path={{ .Values.prometheus.data_mount_point }}/data"
        - "--config.file={{ .Values.prometheus.config_mount_point }}/prometheus.yaml"
        - "--web.console.libraries=/usr/share/prometheus/console_libraries"
        - "--web.console.templates=/usr/share/prometheus/consoles"
        - "--web.enable-admin-api"
        - "--web.external-url=http://anything/services/prometheus/latest"
        - "--web.route-prefix=/"
        volumeMounts:
        - name: prometheus-configuration
          mountPath: {{ .Values.prometheus.config_mount_point }}
        - name: prometheus-data
          mountPath: {{ .Values.prometheus.data_mount_point }}
      - name: sidecar
        image: {{ tpl .Values.sidecar_prometheus.image $ }}
        imagePullPolicy: {{ .Values.prometheus.imagePullPolicy }}
        {{- if .Values.sidecar_prometheus.resources }}
        resources:
{{ toYaml .Values.sidecar_prometheus.resources | indent 10 }}
        {{- end }}
        {{- if .Values.global.spire.enabled }}
        volumeMounts:
        {{- include "sidecar_volume_mounts" . | indent 8 }}
        {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
        volumeMounts:
        {{- include "sidecar_volume_certs_mount" . | indent 8 }}
        {{- end }}
        ports:
        - name: proxy
          containerPort: 8080
        - name: metrics
          containerPort: 8081
        env:
{{- include "generic.envvars" (dict "envvars" .Values.sidecar_prometheus.envvars "top" .) | indent 10 }}
      imagePullSecrets:
      - name: docker.secret
      volumes:
      {{- if .Values.global.spire.enabled }}
      {{- include "sidecar_volumes" . | indent 6 }}
      {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
      volumes:
      {{- include "sidecar_certs_volumes" . | indent 6 }}
      {{- end }}
      - name: prometheus-configuration
        configMap:
          name: prometheus
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus