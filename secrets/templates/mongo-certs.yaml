{{- if .Values.mongo.secret }}
{{ if .Values.mongo.secret.certificates }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Values.mongo.secret.secret_name }}
  labels:
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    release: "{{ $.Release.Name }}"
    heritage: "{{ $.Release.Service }}"
type: Opaque
data:

# use global certs
  {{- if .Values.global.global_certs.enabled }}
# -- use file
  {{- if .Values.global.global_certs.certificates.from_file.enabled }}
  {{- $fromfile := .Values.global.global_certs.certificates.from_file.path }}

  {{- $cacert := .Files.Get (include "cert" (dict "path" $fromfile "file" "ca.crt") ) }}
  {{- $servercert := .Files.Get (include "cert" (dict "path" $fromfile "file" "server.crt") ) }}
  {{- $serverkey := .Files.Get (include "cert" (dict "path" $fromfile "file" "server.key") ) }}

  ca.pem: {{ $cacert | b64enc }}
  ca_b64: {{ $cacert | b64enc | b64enc }}
  cert.pem: {{ $servercert | b64enc }}
  cert_b64: {{ $servercert | b64enc | b64enc }}
  key.pem: {{ $serverkey | b64enc }}
  key_b64: {{ $serverkey | b64enc | b64enc }}
  mongodb.pem: {{include "combocertkey" (dict "crtsrc" ($servercert) "keysrc" ($serverkey) ) | b64enc }}

{{- else }}
# -- use values
{{- $certs := .Values.internalmongo.secret.certificates }}
  ca.pem: {{ $certs.ca | b64enc }} 
  ca_b64: {{ $certs.ca | b64enc | b64enc }}
  cert.pem: {{ $certs.cert | b64enc }}
  cert_b64: {{ $certs.cert | b64enc | b64enc }}
  key.pem: {{ $certs.key | b64enc }}
  key_b64: {{ $certs.key | b64enc | b64enc }}
  mongodb.pem: {{include "combocertkey" (dict "crtsrc" $certs.cert "keysrc" $certs.key ) | b64enc }}
{{- end }}

{{- else }}
# use local certs

# -- use file
{{- if $.Values.mongo.secret.certificates.from_file.enabled }}
  {{- $fromfile := $.Values.mongo.secret.certificates.from_file.path }}
  
  {{- $cacert := .Files.Get (include "cert" (dict "path" $fromfile "file" "ca.crt") ) }}
  {{- $servercert := .Files.Get (include "cert" (dict "path" $fromfile "file" "server.crt") ) }}
  {{- $serverkey := .Files.Get (include "cert" (dict "path" $fromfile "file" "server.key") ) }}

  ca.pem: {{ $cacert | b64enc }}
  ca_b64: {{ $cacert | b64enc | b64enc }}
  cert.pem: {{ $servercert | b64enc }}
  cert_b64: {{ $servercert | b64enc | b64enc }}
  key.pem: {{ $serverkey | b64enc }}
  key_b64: {{ $serverkey | b64enc | b64enc }}
  mongodb.pem: {{include "combocertkey" (dict "crtsrc" ($servercert) "keysrc" ($serverkey) ) | b64enc }}
{{- else }}
# -- use values
{{- $certs := .Values.mongo.secret.certificates }}
  ca.pem: {{ $certs.ca | b64enc }} 
  ca_b64: {{ $certs.ca | b64enc | b64enc }}
  cert.pem: {{ $certs.cert | b64enc }}
  cert_b64: {{ $certs.cert | b64enc | b64enc }}
  key.pem: {{ $certs.key | b64enc }}
  key_b64: {{ $certs.key | b64enc | b64enc }}
  mongodb.pem: {{include "combocertkey" (dict "crtsrc" $certs.cert "keysrc" $certs.key ) | b64enc }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


