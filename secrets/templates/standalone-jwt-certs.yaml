{{- if .Values.data.deploy.standalone }}
{{- if .Values.data.deploy.secrets }}
{{- $certs := .Values.data.deploy.secrets.certs }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $certs.name }}
  labels:
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    release: "{{ $.Release.Name }}"
    heritage: "{{ $.Release.Service }}"
type: Opaque
data:
  {{- if .Values.global.global_certs.enabled }}
  {{- $fromfile := $.Values.global.global_certs.certificates.from_file.path }}
  {{- $cacert := .Files.Get (include "cert" (dict "path" $fromfile "file" "ca.crt") ) }}
  {{- $servercert := .Files.Get (include "cert" (dict "path" $fromfile "file" "server.crt") ) }}
  {{- $serverkey := .Files.Get (include "cert" (dict "path" $fromfile "file" "server.key") ) }}

  jwt.trust.pem: {{ $cacert | b64enc | b64enc }}
  jwt.cert.pem: {{ $servercert | b64enc | b64enc }}
  jwt.key.pem: {{ $serverkey| b64enc | b64enc }}
  server.trust.pem: {{ $cacert | b64enc | b64enc }}
  server.cert.pem: {{ $servercert | b64enc | b64enc }}
  server.key.pem: {{ $serverkey| b64enc | b64enc }}
  {{- else }}
  {{- range $key, $value := $certs }}
  {{- if and (ne $key "name") }}
  {{ base $key }}: {{ $value | b64enc | b64enc }}
  {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
{{- end }}