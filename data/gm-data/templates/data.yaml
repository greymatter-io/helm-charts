kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ .Values.data.name }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Values.data.name }}
  replicas: {{ .Values.data.replicas | default 1 }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      gmproxy: {{ .Values.data.name }}
  template:
    metadata:
      labels:
        gmproxy: {{ .Values.data.name }}
    spec:
      {{- if and .Values.global.environment (ne .Values.global.environment "openshift") }}
      {{- if .Values.data.security_context.enabled }}
      securityContext:
        fsGroup: {{ .Values.data.security_context.fs_group }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ .Values.global.waiter.service_account.name }}
      initContainers:
        - name: ensure-{{ .Values.data.name }}
          image: {{ .Values.global.waiter.image }}
          imagePullPolicy: {{ .Values.data.image_pull_policy }}
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE
              value: {{ .Values.mongo.name }}
      containers:
      - name: {{ .Values.data.name }}
        image: {{ tpl .Values.data.image $ | quote }}
        imagePullPolicy: {{ .Values.data.image_pull_policy }}
        {{- if .Values.data.resources }}
        resources:
{{ toYaml .Values.data.resources | indent 10 }}
        {{- end }}
        {{- if and .Values.global.environment (ne .Values.global.environment "openshift") }}
        {{- if .Values.data.security_context.enabled }}
        securityContext:
          runAsUser: {{ .Values.data.security_context.run_as_user }}
          runAsGroup: {{ .Values.data.security_context.run_as_group }}
        {{- end }}
        {{- end }}
        env:
          {{- include "data.envvars" (dict "envvar" .Values.data.envvars "top" $) | indent 8 }}
        {{- if  (eq .Values.data.envvars.uses3.value  "false") }}
        volumeMounts:
          - name: data-pvc
            mountPath: {{ tpl .Values.data.pvc.mount_point $ }}
        {{- end }}
      - name: sidecar
        image: {{ tpl .Values.sidecar.image $ | quote }}
        imagePullPolicy: {{ .Values.sidecar.image_pull_policy }}
        {{- if .Values.sidecar.resources }}
        resources:
{{ toYaml .Values.sidecar.resources | indent 10 }}
        {{- end }}
        env:
        {{- include "sidecar.envvars" . | indent 8 }}
        {{- if .Values.global.spire.enabled }}
        - name: SPIRE_PATH
          value: {{ .Values.global.spire.path }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.sidecar.port }}
          name: proxy
          protocol: TCP
        - containerPort: {{ .Values.sidecar.metrics_port }}
          name: metrics
          protocol: TCP
        {{- if .Values.global.spire.enabled }}
        {{- else if .Values.sidecar.secret.enabled }}
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - "curl -k --cacert {{ .Values.sidecar.secret.mount_point }}{{ .Values.sidecar.secret.secret_keys.ca }} --key {{ .Values.sidecar.secret.mount_point }}{{ .Values.sidecar.secret.secret_keys.key }} --cert {{ .Values.sidecar.secret.mount_point }}{{ .Values.sidecar.secret.secret_keys.cert }} https://localhost:8181/list/1/"
          initialDelaySeconds: 20
          periodSeconds: 5
        {{- end }}
        volumeMounts:
        {{- if .Values.global.spire.enabled }}
        {{- include "spire_volume_mount" . | indent 8 }}
        {{- else if .Values.sidecar.secret.enabled }}
        {{- include "sidecar_volume_certs_mount" . | indent 8 }}
        {{- end}}
      {{- if .Values.global.consul.enabled }}
      {{- $data := dict "Values" .Values "ServiceName" .Values.data.name }}
      {{- include "consul.agent" $data | nindent 6 }}
      {{- end }}


      imagePullSecrets:
      - name: {{ .Values.global.image_pull_secret | default "docker.secret" }}
      volumes:
      {{- if .Values.global.consul.enabled }}
      - name: data-consul
        emptyDir: {}
      - name: config-consul
        emptyDir: {}
      {{- end }}
      {{- if .Values.global.spire.enabled }}
      {{- include "spire_volumes" . | indent 6 }}
      {{- else if .Values.sidecar.secret.enabled }}
      {{- include "sidecar_certs_volumes" . | indent 6 }}
      {{- end }}
      {{- if .Values.data.secret.enabled }}
      - name: data
        secret:
          secretName: {{ .Values.data.secret.secret_name }}
      {{- end }}
      - name: jwt-security
        secret:
          secretName: jwt-security
      {{- if  (eq .Values.data.envvars.uses3.value  "false") }}
  volumeClaimTemplates:
  - metadata:
      name: data-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.data.pvc.size | default "40" }}Gi
      {{- end }}
