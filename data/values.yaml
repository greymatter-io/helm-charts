# Grey Matter Data settings

data:
  version: 0.2.3
  client_jwt_endpoint_address: localhost
  client_jwt_endpoint_use_tls: 'true'
  base_path: /services/data/0.2.3
  image: docker.production.deciphernow.com/deciphernow/gm-data:0.2.3
  certs_mount_point: /certs
  imagePullPolicy: Always
  use_tls: true
  master_key: ac8923[lkn43589vi23kl4rfgv0ws

 # These are the AWS settings that Data requires if configured to use S3
 #  - bucket: The name of the bucket where Data will write it's shared config, if configured
  aws:
    access_key: 
    secret_key: 
    region: 
    bucket: 

  envvars:
    - type: value
      name: uses3
      value: true
    - type: secret
      name: aws_access_key_id
      secret: data
      key: aws_access_key_id
    - type: secret 
      name: aws_secret_access_key
      secret: data
      key: aws_secret_access_key
    - type: secret
      name: aws_region
      secret: data
      key: aws_region
    - type: secret
      name: aws_s3_bucket
      secret: data
      key: aws_s3_bucket
    - type: value
      name: aws_s3_partition
      value: data
    - type: value
      name: gmdata_namespace
      value: home
    - type: value
      name: gmdata_namespace_userfield
      value: userDN
    - type: secret
      name: jwt_pub
      secret: jwt-security
      key: jwt.pub
    - type: secret 
      name: jwt_api_key
      secret: jwt-security
      key: jwt.api_key
    - type: value
      name: less_chatty_info
      value: 'false'
    - type: secret
      name: masterkey
      secret: data
      key: master_key
    - type: secret
      name: mongo_initdb_root_username
      secret: mongo-credentials
      key: root_username
    - type: secret
      name: mongo_initdb_root_password
      secret: mongo-credentials
      key: root_password
    - type: secret
      name: mongodb
      secret: mongo-credentials
      key: database
    - type: value
      name: gmdata_use_tls
      value: true
    - type: secret
      name: gmdata_cert
      secret: jwt-certs
      key: server.cert.pem
    - type: secret
      name: gmdata_key
      secret: jwt-certs
      key: server.key.pem
    - type: secret
      name: gmdata_trust
      secret: jwt-certs
      key: server.trust.pem
    - type: value
      name: client_prefix
      value:  /services/data/0.2.3
    - type: value
      name: client_jwt_prefix
      value: /services/jwt-security/0.2.0
    - type: value
      name: client_jwt_endpoint_address
      value: localhost
    - type: value
      name: client_jwt_endpoint_port
      value: 8080
    - type: value
      name: client_jwt_endpoint_prefix
      value: /services/jwt-security/0.2.0
    - type: value
      name: client_jwt_endpoint_use_tls
      value: true
    - type: secret
      name: client_jwt_endpoint_cert
      secret: jwt-certs
      key: jwt.cert.pem
    - type: secret
      name: client_jwt_endpoint_key
      secret: jwt-certs
      key: jwt.key.pem
    - type: secret
      name: client_jwt_endpoint_trust
      secret: jwt-certs
      key: jwt.trust.pem
  
mongo:
  replicas: 1
  image: 'deciphernow/mongo:4.0.3'
  imagePullPolicy: Always
  #private_image: false
  # The size, in Gi, that the Mongo PVC should be
  pvc_size: 40

  envvars:
    - type: secret
      name: MONGO_INITDB_DATABASE
      secret: mongo-credentials
      key: database
    - type: secret
      name: MONGO_INITDB_ROOT_USERNAME
      secret: mongo-credentials
      key: root_username
    - type: secret
      name: MONGO_INITDB_ROOT_PASSWORD
      secret: mongo-credentials
      key: root_password
    - type: secret
      name: MONGODB_ADMIN_PASSWORD
      secret: mongo-credentials
      key: admin_password

  credentials:
    secret_name: "mongo-credentials"
    root_username: "mongo"
    root_password: "mongo"
    database: "gmdata"
    admin_password: "mongopassword"

  ssl:
    enabled: false
    name: mongo-ssl-certs
    mount_path: /secret/cert
    certificates:
      - name: mongo-ssl-certs
        ca: |-
          -----BEGIN CERTIFICATE-----
          ...
          -----END CERTIFICATE-----
        cert: |-
          -----BEGIN CERTIFICATE-----
          ...
          -----END CERTIFICATE-----
        key: |-
          -----BEGIN RSA PRIVATE KEY-----
          ...
          -----END RSA PRIVATE KEY-----
        cert_key: |-
          -----BEGIN CERTIFICATE-----
          ...
          -----END CERTIFICATE-----
          -----BEGIN RSA PRIVATE KEY-----
          ...
          -----END RSA PRIVATE KEY-----


sidecar:
  version: 0.7.1
  image: 'docker.production.deciphernow.com/deciphernow/gm-proxy:0.7.1'
  proxy_dynamic: 'true'
  metrics_key_function: depth
  ingress_use_tls: 'true'
  imagePullPolicy: Always

  # Set this to true if you are attempting to deploy Catalog by itself.  
  # Ideally, catalog is deployed as a dependency to Grey Matter, which creates the 
  # sidecar secret, but if individual testing is being done, the sidecar secret will
  # need to be created.  
  create_sidecar_secret: false
  certificates:
    name: sidecar
    ca: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    cert: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    key: |-
      -----BEGIN RSA PRIVATE KEY-----
      ...
      -----END RSA PRIVATE KEY-----
xds:
  port: 18000
  cluster: greymatter

exhibitor:
  replicas: 1