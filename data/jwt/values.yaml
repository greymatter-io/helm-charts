# Grey Matter JWT Security Defaults

global:
  # Used as imagePullSecrets value for each subchart
  image_pull_secret: docker.secret
  # Deployment environment, one of "eks", "kuberenetes", or "openshift"
  environment: kubernetes
  exhibitor:
    replicas: 1
  # Port for Grey Matter Control. Used in sidecar envvars
  control_port: 50000
  # Zone for Grey Matter objects. Used in sidecar envvars
  zone: zone-default-zone
  # Whether or not to use spire
  spire:
    enabled: false
  # Whether to register services with Consul and where to find the Consul server
  consul:
    enabled: false

  sidecar:
    version: 1.2.0

jwt:
  # Name used for the deployment and service resources
  name: jwt-security
  version: '1.0.1'
  image: 'docker-dev.production.deciphernow.com/deciphernow/gm-jwt-security:{{ tpl $.Values.jwt.version $ }}'
  command: ['/bin/sh']
  args:
    [
      '-c',
      'if [[ ! -d ./certs ]]; then mkdir -p ./certs; fi && if [[ ! -d ./etc ]]; then mkdir -p ./certs; fi && /gm-jwt-security/gm-jwt-security',
    ]
  # Used to configure the REDIS_DB environment variable 
  # If set, enables tls using the secret specified in secret_name
  #secret:
  #  secret_name: jwt-certs
  #  mount_point: /gm-jwt-security/certs
  # Location to mount the information specified in users_cg_name in the container
  users_mount_point: /gm-jwt-security/etc
  image_pull_policy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 64Mi

  envvars:
    http_port:
      type: value
      value: '3000'
    private_key: 
      type: secret
      secret: jwt-security
      key: jwt.key
    jwt_api_key:
      type: secret
      secret: jwt-security
      key: jwt.api_key
    enable_tls:
      type: value
      value: 'false'
    zerolog_level:
      type: value
      value: 'info'
    token_exp_time:   
      type: value
      value: '300'
    redis_port:
      type: value
      value: "6379"
    redis_db:   
      type: value
      value: "0"
    redis_host:
      type: value
      value: '{{ .Values.redis.name }}.{{ .Release.Namespace }}.svc'
    redis_pass:
      type: secret
      secret: '{{ .Values.redis.secret.secret_name | default "redis-password" }}'
      key: password


  # Provides a list of authorized users for the JWT service - preloaded with the DNs for GM Control, GM Catalog and the Mesh cert
  users_cg_name: jwt-users
  # A JSON list of users that will be permited access to JWT
  users: |-
    {
      "users": [
        {
          "label": "CN=quickstart,OU=Engineering,O=Decipher Technology Studios,=Alexandria,=Virginia,C=US",
          "values": {
            "email": [
              "quickstart@deciphernow.com"
            ],
            "org": [
              "www.deciphernow.com"
            ],
            "privilege": [
              "root"
            ]
          }
        },
        {
          "label": "CN=localuser,OU=Engineering,O=Decipher Technology Studios,=Alexandria,=Virginia,C=US",
          "values": {
            "email": [
              "localuser@deciphernow.com"
            ],
            "org": [
              "www.deciphernow.com"
            ],
            "privilege": [
              "root"
            ]
          }
        }
      ]
    }

redis:
  # Name used for the redis deployment and service resources
  name: redis
  # The secret containing the password to configure the environment variable REDIS_PASSWORD
  secret:
    secret_name: redis-password
  # Redis image to use when global.environment=openshift
  openshift:
    image: 'centos/redis-32-centos7'
  # Redis image to use when global.environment=kubernetes
  k8s:
    image: 'redis:3.2'
  replica_count: 1
  image_pull_policy: IfNotPresent
  # Uses global.image_pull_secret if true
  private_image: false
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 128Mi
  envvars:
    redis_password:
      type: secret 
      secret: '{{ .Values.redis.secret.secret_name | default "redis-password" }}'
      key: password

# Sets default sidecar configurations for all sidecars
sidecar:
  version: '{{ .Values.global.sidecar.version | default "latest" }}'
  # Port where the proxy will listen
  port: 10808
  # Port where the proxy will expose metrics
  metrics_port: 8081
  # If set, enables tls using the secret specified in secret_name
  secret:
    secret_name: sidecar-certs
    mount_point: /etc/proxy/tls/sidecar
  image: 'docker-dev.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
  image_pull_policy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
