{{- if not .Values.postgres.rds.enabled }}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: postgres-slo
  namespace: {{ .Release.Namespace }}
  labels:
    gm.proxy: postgres-slo
spec:
  serviceName: postgres-slo
  selector:
    matchLabels:
      gm.proxy: postgres-slo
  replicas: {{ .Values.postgres.replica_count }}
  serviceName: postgres-slo
  template:
    metadata:
      labels:
        gm.proxy: postgres-slo
    spec:
      {{- if and .Values.global.environment (ne .Values.global.environment "openshift") }}
      securityContext:
        runAsUser: 2000
        runAsGroup: 0
        fsGroup: 2000
      {{- end }}
      containers:
      - name: postgres
        image: {{ .Values.postgres.image }}
        imagePullPolicy: {{ .Values.postgres.image_pull_policy }}
        {{- if .Values.postgres.resources }}
        resources:
{{ toYaml .Values.postgres.resources | indent 10 }}
        {{- end }}
        ports:
          - name: postgres
            containerPort: 5432
        env:
        {{- include "envvars" (dict "envvar" .Values.postgres.envvars "top" $) | indent 10 }}
        volumeMounts:
          - name: data
            mountPath: {{ .Values.postgres.data_mount_point }}
        {{- if .Values.postgres.secret.enabled }}
          - name: certificates
            mountPath: {{ .Values.postgres.secret.mount_point }}
          - name: postgres-slo-config
            mountPath: {{ .Values.postgres.conf_mount_point }}
          - name: postgres-slo-overrides
            mountPath: {{ .Values.postgres.overrides_mount_point }}
        {{- end }}
        readinessProbe:
          tcpSocket:
            port: postgres
          # Pods are considered to be in a Failure state before the initialDelaySeconds has passed, meaning they won't be backends for a service
          initialDelaySeconds: 5
          periodSeconds: 2
      {{- if .Values.postgres.private_image }}
      imagePullSecrets:
      - name: {{ .Values.global.image_pull_secret }}
      {{- end }} 
      volumes:
      - name: postgres-slo-config
        configMap:
          name: postgres-slo-config
      - name: postgres-slo-overrides
        configMap:
          name: postgres-slo-overrides
      {{- if .Values.postgres.secret.enabled }}
      - name: certificates
        secret:
          secretName: {{ .Values.postgres.secret.secret_name }}
          defaultMode: 0640
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 8Gi
{{- end }}
