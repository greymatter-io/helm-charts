global:

  imagePullSecret: docker.secret

  environment: openshift
  domain:
  route_url_name:
  remove_namespace_from_url: ''
  exhibitor:
    replicas: 1
  xds:
    port: 18000
    cluster: greymatter
  slo:
    sidecar:
      version: latest
  spire:
    enabled: false
  mesh_tls:
    use_provided_certs: false
  waiter:
    image: deciphernow/k8s-waiter:latest
    serviceAccount:
      name: waiter-sa
  consul:
    enabled: false
    host: ''
    port: 8500
  slo: 
    sidecar:
      version: latest
  sidecar:
    version: latest
slo:
  version: 1.1.1
  image: docker.production.deciphernow.com/deciphernow/gm-slo:1.1.1
  imagePullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  secret:
    secret_name: slo-certs
    mountPoint: /service-certs
    secretKeys:
      ca: ca.crt
      cert: service.crt
      key: service.key

sidecar:
  version: '{{- $.Values.global.slo.sidecar.version | default $.Values.global.sidecar.version }}'
  image: 'docker-dev.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
  metrics_key_function: depth
  imagePullPolicy: IfNotPresent
  secret:
    secret_name: sidecar-certs
    mountPoint: /etc/proxy/tls/sidecar
    secretKeys:
      ca: ca.crt
      cert: service.crt
      key: service.key
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  envvars:
    xds_cluster:
      type: value
      value: 'slo'

postgres:
  credentials:
    secret_name: postgres-credentials
    username: greymatter
    database: greymatter
  rds:
    enabled: false
    endpoint:
  data_mount_point: /var/lib/pgsql/data
  openshift:
    image: 'docker.io/centos/postgresql-10-centos7'
  k8s:
    image: 'docker.io/centos/postgresql-10-centos7'
  imagePullPolicy: IfNotPresent
  replica_count: 1
  private_image: false
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  confMountPoint: /conf
  # This override is unique to OpenShift's postgresql container
  # https://github.com/sclorg/postgresql-container/tree/master/examples/custom-config
  overridesMountPoint: /opt/app-root/src/postgresql-cfg
  secret:
    secret_name: postgres-ssl-certs
    mountPoint: /certs
    secretKeys:
      ca: ca.pem
      cert: server.crt
      key: server.key
  envvars:
    - type: secret
      name: postgresql_user
      secret: postgres-credentials
      key: username
    - type: secret
      name: POSTGRESQL_PASSWORD
      secret: postgres-credentials
      key: password
    - type: value
      name: POSTGRES_USER_CN
      value: CN=*.greymatter.svc, OU=Engineering, O=Decipher Technology Studios, L=Alexandria, ST=Virginia, C=US
    - type: secret
      name: POSTGRESQL_DATABASE
      secret: postgres-credentials
      key: database