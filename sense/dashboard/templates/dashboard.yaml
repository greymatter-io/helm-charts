kind: Deployment
apiVersion: apps/v1
metadata:
  name: dashboard
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: dashboard
  replicas: 1
  template:
    metadata:
      labels:
        app: dashboard
    spec:
      containers:
      - name: dashboard
        image: '{{ tpl .Values.dashboard.image $ }}'
        imagePullPolicy: {{ .Values.dashboard.image_pull_policy }}
        {{- if .Values.dashboard.resources }}
        resources:
{{ toYaml .Values.dashboard.resources | indent 10 }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: "/#/?ascending=true"
            port: {{ .Values.dashboard.port | default 1337 }}
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: "/#/?ascending=true"
            port: {{ .Values.dashboard.port | default 1337 }}
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 5
        env:
        {{- include "envvars" (dict "envvar" .Values.dashboard.envvars "top" $) | indent 10 }}
        {{- if .Values.dashboard.secret }}
        volumeMounts:
        - name: service-certs
          mountPath: {{ .Values.dashboard.secret.mount_point }}
        {{- end }}
      - name: sidecar
        image: '{{ tpl .Values.sidecar.image $ }}'
        imagePullPolicy: {{ .Values.sidecar.image_pull_policy }}
        {{- if .Values.dashboard.resources }}
        resources:
{{ toYaml .Values.sidecar.resources | indent 10 }}
        {{- end }}
        ports:
        - name: proxy
          containerPort: {{ .Values.sidecar.port }}
        - name: metrics
          containerPort: {{ .Values.sidecar.metrics_port }}
        env:
        {{- include "greymatter.envvars" (dict "overrides" .Values.dashboard.sidecar "top" .) | indent 8 }}
        {{- if .Values.sidecar.secret }}
        volumeMounts:
        {{- include "sidecar_volume_certs_mount" . | indent 8 }}
        {{- end }}
      {{- if .Values.global.consul.enabled }}
      {{- $data := dict "Values" .Values "ServiceName" "dashboard" }}
      {{- include "consul.agent" $data | nindent 6 }}
      {{- end }}
      volumes:
      {{- if .Values.global.consul.enabled }}
      - name: data-consul
        emptyDir: {}
      - name: config-consul
        emptyDir: {}
      {{- end }}
      {{- if .Values.sidecar.secret }}
      {{- include "sidecar_certs_volumes" . | indent 6 }}
      {{- end }}
      {{- if .Values.dashboard.secret }}
      - name: service-certs
        secret:
          secretName: {{ .Values.dashboard.secret.secret_name }}
          defaultMode: 0600
      {{- end }}
      imagePullSecrets:
      - name: {{ .Values.global.image_pull_secret }}
