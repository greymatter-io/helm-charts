kind: Deployment
apiVersion: apps/v1
metadata:
  name: catalog
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      {{ .Values.global.control.cluster_label }}: catalog
      deployment: catalog
  replicas: 1
  template:
    metadata:
      labels:
        {{ .Values.global.control.cluster_label }}: catalog
        deployment: catalog
    spec:
      serviceAccountName: {{ .Values.global.waiter.service_account.name }}
      initContainers:
        - name: ensure-gm-control
          image: {{ .Values.global.waiter.image }}
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE
              value: control
            - name: POST_DELAY
              value: "10"
      containers:
      - name: catalog
        image: {{ tpl .Values.catalog.image $ }}
        imagePullPolicy: {{ .Values.catalog.image_pull_policy }}
        {{- if .Values.catalog.resources }}
        resources:
{{ toYaml .Values.catalog.resources | indent 10 }}
        {{- end }}
        env:
        {{- include "envvars" (dict "envvar" .Values.catalog.envvars "top" $) | indent 8 }}
        {{- if .Values.catalog.secret.enabled }}
        volumeMounts:
        - name: certs
          mountPath: {{ .Values.catalog.secret.mount_point }}
        {{- end }}
      - name: sidecar
        image: {{ tpl $.Values.sidecar.image $ }}
        imagePullPolicy: {{ .Values.sidecar.image_pull_policy }}
        {{- if .Values.sidecar.resources }}
        resources:
{{ toYaml .Values.sidecar.resources | indent 10 }}
        {{- end }}
        ports:
        - name: proxy
          containerPort: {{ .Values.sidecar.port }}
        - name: metrics
          containerPort: {{ .Values.sidecar.metrics_port }}
        env:
        {{- include "sidecar.envvars" $ | indent 8 }}
        {{- if .Values.global.spire.enabled }}
        - name: SPIRE_PATH
          value: {{ .Values.global.spire.path }}
        {{- end }}
        volumeMounts:
        {{- if .Values.global.spire.enabled }}
        {{- include "spire_volume_mount" . | indent 8 }}
        {{- else if .Values.sidecar.secret.enabled }}
        {{- include "sidecar_volume_certs_mount" . | indent 8 }}
        {{- end }}
        {{- if .Values.global.spire.enabled }}
        {{- else if .Values.sidecar.secret.enabled }}
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - "curl -k --cacert {{ .Values.sidecar.secret.mount_point }}/{{ .Values.sidecar.secret.secret_keys.ca }} --key  {{ .Values.sidecar.secret.mount_point }}/{{ .Values.sidecar.secret.secret_keys.key }} --cert  {{ .Values.sidecar.secret.mount_point }}/{{ .Values.sidecar.secret.secret_keys.cert }} https://localhost:9080/summary"
          initialDelaySeconds: 20
          periodSeconds: 5
        {{- end }}
      {{- if .Values.global.consul.enabled }}
      {{- $data := dict "Values" .Values "ServiceName" "catalog" }}
      {{- include "consul.agent" $data | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.global.consul.enabled }}
      - name: data-consul
        emptyDir: {}
      - name: config-consul
        emptyDir: {}
      {{- end }}
      {{- if .Values.global.spire.enabled }}
      {{- include "spire_volumes" . | indent 6 }}
      {{- else if .Values.sidecar.secret.enabled }}
      {{- include "sidecar_certs_volumes" . | indent 6 }}
      {{- end }}
      {{- if .Values.catalog.secret.enabled }}
      - name: certs
        secret:
          secretName: {{ .Values.catalog.secret.secret_name }}
      {{- end }}
      imagePullSecrets:
      - name: {{ .Values.global.image_pull_secret }}
