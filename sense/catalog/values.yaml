# Grey Matter Catalog Defaults

global:
  # Used as imagePullSecrets value for each subchart
  image_pull_secret: docker.secret    
  # Deployment environment, one of "eks", "kuberenetes", or "openshift"
  environment: openshift
  # Used to configure control and control-api environment variables
  zone: zone-default-zone
  # Whether to use consul for service discovery
  consul:       
    enabled: false
    host: ''
    port: 8500
  # Port for Grey Matter Control. Used in catalog init and sidecar envvars.
  control_port: 50000
  # Whether or not to use spire for cert management and the trust domain
  spire:
    enabled: false
    trust_domain: quickstart.greymatter.io
  # Configures the init container used to wait on various deployments to be ready
  waiter:                             
    image: deciphernow/k8s-waiter:latest
    service_account:
      name: waiter-sa
  # Global sidecar config (supports version and envvars)
  sidecar:
    version: 1.2.2

catalog:
  # Name used for the deployment and service resources
  name: catalog
  # GM Catalog version
  version: latest
  image: docker.production.deciphernow.com/deciphernow/gm-catalog:{{ $.Values.catalog.version }}
  # When to pull container images, used in the deployment
  image_pull_policy: IfNotPresent
  # CPU and memory limits for the catalog service
  resources:
    limits:
      cpu: 200m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi
  # Catalog service port
  port: 9080
  secret:
    enabled: true
    secret_name: sidecar-certs
    mount_point: /etc/pki
    secret_keys:
      ca: ca.crt
      cert: server.crt
      key: server.key
  envvars:
    config_source:
      type: value
      value: 'gmdata'
    instance_polling_interval:
      type: value
      value: '5s'
    config_polling_interval:
      type: value
      value: '30s'
    port:
      type: value
      value: '{{ $.Values.catalog.port }}'
    control_server_0_address:
      type: value
      value: 'control.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.control_port }}'
    control_server_0_zone_name:
      type: value
      value: '{{ .Values.global.zone }}'
    control_server_0_request_cluster_name:
      type: value
      value: 'edge'
    use_tls:
      type: value
      value: 'true'
    ca_cert_path:
      type: value
      value: '/etc/pki/{{ .Values.catalog.secret.secret_keys.ca }}'
    server_cert_path:
      type: value
      value: '/etc/pki/{{ .Values.catalog.secret.secret_keys.cert }}'
    server_key_path:
      type: value
      value: '/etc/pki/{{ .Values.catalog.secret.secret_keys.key }}'
    client_address:
      type: value
      value: localhost
    client_port:
      type: value
      value: '8080'
    client_prefix:
      type: value
      value: '/data'
    client_use_tls:
      type: value
      value: 'true'
    client_cert:
      type: secret
      secret: sidecar-certs
      key: cert_b64
    client_key:
      type: secret
      secret: sidecar-certs
      key: key_b64
    client_trust:
      type: secret
      secret: sidecar-certs
      key: ca_b64
    gmdata_startup_delay:
      type: value
      value: '10s'
    gmdata_max_retries:
      type: value
      value: '100'
    gmdata_retry_delay:
      type: value
      value: '5s'
    gmdata_root_event_name:
      type: value
      value: 'world'
    client_identity:
      type: value
      value: 'C=US,ST=Virginia,L=Alexandria,O=Decipher Technology Studios,OU=Engineering,CN=greymatter'
    client_email:
      type: value
      value: 'gm-control@deciphernow.com'

  init:
    image: 'docker.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
    imagePullPolicy: IfNotPresent
    envvars:
      debug:
        type: 'value'
        value: 'true'
      catalog_api_host:
        type: 'value'
        value: '{{ .Values.catalog.name }}:{{ .Values.catalog.port }}'
      use_tls:
        type: value
        value: '{{ $.Values.catalog.secret.enabled | default false }}'
      certs_mount:
        type: value
        value: '{{ .Values.catalog.secret.mount_point | default "/etc/pki" }}'
      ca_cert:
        type: value
        value: '{{ .Values.catalog.secret.secret_keys.ca | default "ca.crt" }}'
      cert:
        type: value
        value: '{{ .Values.catalog.secret.secret_keys.cert | default "server.crt" }}'
      key:
        type: value
        value: '{{ .Values.catalog.secret.secret_keys.key | default "server.key" }}'

# Sidecar configuration for Catalog
sidecar:
  version: '{{- $.Values.global.sidecar.version | default "latest" }}'
  image: 'docker.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
  # Port where the proxy will listen
  port: 10808
  # Port where the proxy will expose metrics
  metrics_port: 8081
  secret:
    enabled: true
    secret_name: sidecar-certs
    mount_point: /etc/proxy/tls/sidecar
    secret_keys:
      ca: ca.crt
      cert: server.crt
      key: server.key
  # Overrides global.sidecar.envvars
  envvars:
    xds_cluster:
      type: value
      value: '{{ .Values.catalog.name }}'
  # When to pull images, used in the deployment
  image_pull_policy: IfNotPresent
  # CPU and memory limits for the sidecar
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Services list used to configure Catalog, which populates service metadata for GM Dashboard
services:
  catalog:
    catalogEnabled: true
    controlEnabled: true
    serviceName: 'catalog'
    observablesEnabled: false
    port: 9080
    enableInstanceMetrics: 'true'
    capability: 'Mesh'
    documentation: '/services/catalog/latest/'
    name: 'Grey Matter Catalog'
    owner: 'Decipher'
    version: 1.0.1
    minInstances: 1
    maxInstances: 1
    data_prefix: "/data"
    secret:
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /etc/proxy/tls/sidecar
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt
    routes:
      - '/services/catalog/{{ $.Values.services.catalog.version }}'
      - '/services/catalog/{{ $.Values.services.catalog.version }}/'

  # control:
  #   name: 'Grey Matter Control'
  #   serviceName: 'control'
  #   routes:
  # - '/services/xds/{{ $.Values.global.xds.version }}'
  # - '/services/xds/{{ $.Values.global.xds.version }}'

  dashboard:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter Dashboard'
    serviceName: 'dashboard'
    observablesEnabled: false
    port: 1337
    enableInstanceMetrics: 'true'
    capability: 'Apps'
    documentation: ''
    owner: 'Decipher'
    version: 3.3.1
    routes:
      - '/services/dashboard/latest'
      - '/services/dashboard/latest/'
    secret:
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /etc/proxy/tls/sidecar
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt


  prometheus:
    catalogEnabled: false
    controlEnabled: true
    name: 'Prometheus'
    serviceName: 'prometheus'
    observablesEnabled: false
    port: 9090
    secret:
      enabled: false

  data:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter Data'
    serviceName: 'data'
    observablesEnabled: false
    port: 8181
    enableInstanceMetrics: 'true'
    capability: 'Data'
    documentation: '/services/data/latest/static/ui/index.html'
    owner: 'Decipher'
    version: 1.0.0
    routes:
      - '/services/data/{{ $.Values.services.data.version }}'
      - '/services/data/{{ $.Values.services.data.version }}/'
    secret:
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /etc/proxy/tls/sidecar
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  internal-data:
    catalogEnabled: false
    controlEnabled: true
    name: 'Grey Matter Internal Data'
    serviceName: 'data-internal'
    observablesEnabled: false
    port: 8181
    enableInstanceMetrics: "true" 
    capability: 'Data'
    documentation: '/services/data/latest/static/ui/index.html'
    name: 'Grey Matter Internal Data'
    owner: 'Decipher'
    version: 1.0.0
    secret:
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /etc/proxy/tls/sidecar
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  jwt:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter JWT Security'
    serviceName: 'jwt-security'
    observablesEnabled: false
    port: 3000
    enableInstanceMetrics: 'true'
    capability: 'Security'
    documentation: ''
    owner: 'Decipher'
    version: '0.2.0'
    routes:
      - '/services/jwt-security/{{ $.Values.services.jwt.version }}'
      - '/services/jwt-security/{{ $.Values.services.jwt.version }}/'
    secret:
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /etc/proxy/tls/sidecar
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  internal-jwt:
    catalogEnabled: false
    controlEnabled: true
    name: 'Grey Matter JWT Security Internal'
    serviceName: 'internal-jwt-security'
    observablesEnabled: false
    port: 3000
    enableInstanceMetrics: 'true'
    capability: 'Grey Matter'
    documentation: ''
    owner: 'Decipher'
    version: '0.2.0'
    secret:          
      enabled: true
      secret_name: sidecar-certs
      mount_point: /etc/proxy/tls/sidecar
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  controlApi:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter Control API'
    serviceName: 'control-api'
    observablesEnabled: false
    port: 5555
    enableInstanceMetrics: 'true'
    capability: 'Mesh'
    documentation:
    owner: 'Decipher'
    version: '1.1.0'
    routes:
      - '/services/control-api/{{ $.Values.services.controlApi.version }}'
      - '/services/control-api/{{ $.Values.services.controlApi.version }}/'
    secret:
      enabled: true
      secret_name: sidecar-certs
      mount_point: /etc/proxy/tls/sidecar
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  edge:
    catalogEnabled: true
    controlEnabled: false
    name: 'Grey Matter Edge'
    serviceName: 'edge'
    observablesEnabled: false
    port: 10808
    # This is the DN of the new certificate issued to the edge for internal mesh communication. It needs to be whitelisted by the proxies
    egressDn: C=US,ST=Virginia,L=Alexandria,O=Decipher Technology Studios,OU=Engineering,CN=greymatter
    # We use a static cert on the edge listener
    removeListenerSecret: true
    enableInstanceMetrics: 'true'
    capability: 'Mesh'
    documentation: ''
    owner: 'Decipher'
    version: '1.0.0'
    secret:
      enabled: true
      secret_name: sidecar-certs
      mount_point: /etc/proxy/tls/edge
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  slo:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter Service Level Objectives'
    serviceName: 'slo'
    observablesEnabled: false
    port: 1337
    enableInstanceMetrics: 'true'
    capability: 'Sense'
    documentation:
    owner: 'Decipher'
    version: '1.1.1'
    routes:
      - '/services/slo/{{ $.Values.services.slo.version }}'
      - '/services/slo/{{ $.Values.services.slo.version }}/'
    secret:
      enabled: true
      secret_name: sidecar-certs
      mount_point: /etc/proxy/tls/sidecar
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt
