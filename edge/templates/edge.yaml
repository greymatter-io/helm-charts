kind: Deployment
apiVersion: apps/v1
metadata:
  name: edge
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edge
      deployment: edge
  template:
    metadata:
      labels:
        app: edge
        deployment: edge
    spec:
      containers:
      - name: edge
        image: {{ tpl .Values.sidecar.image $ | quote }}
        imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
        {{- if .Values.edge.resources }}
        resources:
{{ toYaml .Values.edge.resources | indent 10 }}
        {{- end }}
        env:
        {{- include "greymatter.envvars" . | indent 8 }}
        ports:
        - name: proxy
          containerPort: 8080
        - name: metrics
          containerPort: 8081
        volumeMounts:
        - name: edge
          mountPath: {{ .Values.global.edge.certPath }}
        {{- if .Values.global.spire.enabled }}
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
        {{- include "sidecar_volume_certs_mount" . | indent 8 }}
        {{- end}}
      {{- if .Values.global.consul.enabled }}
      {{- $data := dict "Values" .Values "ServiceName" "edge" }}
      {{- include "consul.agent" $data | nindent 6 }}
      {{- end }}      
      imagePullSecrets:
      - name: docker.secret
      volumes:
      {{- if .Values.global.consul.enabled }}
      - name: data-consul
        emptyDir: {}
      - name: config-consul
        emptyDir: {}
      {{- end }}
      - name: edge
        secret:
          secretName: edge
      {{- if .Values.global.spire.enabled }}
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: Directory
      {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
      {{- include "sidecar_certs_volumes" . | indent 6 }}
      {{- end }}