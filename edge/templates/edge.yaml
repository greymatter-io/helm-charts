kind: Deployment
apiVersion: apps/v1
metadata:
  name: edge
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      gmproxy: edge
      deployment: edge
  template:
    metadata:
      labels:
        gmproxy: edge
        deployment: edge
    spec:
      containers:
      - name: edge
        image: {{ tpl .Values.edge.image $ | quote }}
        imagePullPolicy: {{ .Values.edge.image_pull_policy }}
        {{- if .Values.edge.resources }}
        resources:
{{ toYaml .Values.edge.resources | indent 10 }}
        {{- end }}
        env:
        {{- include "edge.envvars" . | indent 8 }}
        ports:
        - name: proxy
          containerPort: {{ .Values.edge.port }}
        - name: metrics
          containerPort: {{ .Values.edge.metrics_port }}
        volumeMounts:
        {{- if .Values.edge.ingress.secret }}
        {{- include "edge_ingress_certs_mount" . | indent 8 }}
        {{- end }}
        {{- if .Values.edge.egress.secret }}
        {{- include "edge_egress_certs_mount" . | indent 8 }}
        {{- end }}
      {{- if .Values.global.consul.enabled }}
      {{- $data := dict "Values" .Values "ServiceName" "edge" }}
      {{- include "consul.agent" $data | nindent 6 }}
      {{- end }}      
      imagePullSecrets:
      - name: {{ .Values.global.image_pull_secret }}
      volumes:
      {{- if .Values.global.consul.enabled }}
      - name: data-consul
        emptyDir: {}
      - name: config-consul
        emptyDir: {}
      {{- end }}
      {{- if .Values.edge.ingress.secret }}
      {{- include "edge_ingress_volumes" . | indent 6 }}
      {{- end }}
      {{- if .Values.edge.egress.secret }}
      {{- include "edge_egress_volumes" . | indent 6 }}
      {{- end }}
