# Edge Values File

global:
  environment: kubernetes
  domain: development.deciphernow.com
  # Edge access is typically determine by <route_url_name>.<namespace>.<domain>
  # Namespace is only removed whe setting remove_namespace_from_url to true
  #   If you choose to remove the namespace from the url you must ensure your
  #   route_url_name is unique or openshift will throw errors.
  route_url_name: greymatter
  remove_namespace_from_url: 'false'
  exhibitor:
    replicas: 1
  edge:
    enableTLS: true
    certPath: /etc/proxy/tls/edge
    egressDn: cn=edge
  consul:
    enabled: false
    host: ''
    port: 8500

ingress_config:
  default_url: '{{ .Values.global.route_url_name }}.{{ .Release.Namespace }}.{{ .Values.global.domain }}'
  custom_url: '{{ .Values.global.route_url_name }}.{{ .Values.global.domain }}'

edge:
  egress_use_tls: 'true'
  inheaders_enabled: 'true'
  obs_enabled: 'false'
  obs_full_response: 'false'
  base_path: /services/edge/0.7.1
  acl_enabled: 'false'
  imagePullPolicy: IfNotPresent
  ingress_use_tls: true
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

  # The edge requires two certifiates.  One for ingress traffic from the internet and another
  # for egress traffic into the mesh.  The egress cert needs to be specific to the edge so 
  # impersonation can be configured to all of the services from the edge service
  create_edge_secret: false
  certificates:
    ingress:
      name: greymatter-edge-ingress
      ca: |-
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      cert: |-
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      key: |-
        -----BEGIN RSA PRIVATE KEY-----
        ...
        -----END RSA PRIVATE KEY-----
    egress:
      name: greymatter-edge-egress
      ca: |-
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      cert: |-
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      key: |-
        -----BEGIN RSA PRIVATE KEY-----
        ...
        -----END RSA PRIVATE KEY-----

sidecar:
  version: '{{- $.Values.global.edge.version | default $.Values.global.sidecar.version }}'
  image: 'docker.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
  metrics_key_function: depth
  imagePullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  envvars:
    xds_cluster:
      type: value
      value: 'edge'

  # Set this to true if you are attempting to deploy Catalog by itself.
  # Ideally, catalog is deployed as a dependency to Grey Matter, which creates the
  # sidecar secret, but if individual testing is being done, the sidecar secret will
  # need to be created.
  create_sidecar_secret: false
  certificates:
    name: sidecar
    ca: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    cert: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    key: |-
      -----BEGIN RSA PRIVATE KEY-----
      ...
      -----END RSA PRIVATE KEY-----
