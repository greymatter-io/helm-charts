# Edge Values File

global:

  image_pull_secret: docker.secret
  
  environment: kubernetes
  domain: development.deciphernow.com
  # Edge access is typically determine by <route_url_name>.<namespace>.<domain>
  # Namespace is only removed whe setting remove_namespace_from_url to true
  #   If you choose to remove the namespace from the url you must ensure your
  #   route_url_name is unique or openshift will throw errors.
  route_url_name: greymatter
  remove_namespace_from_url: 'false'
  exhibitor:
    replicas: 1
  zone: zone-default-zone
  consul:
    enabled: false
    host: ''
    port: 8500
  control_port: 50000

edge:
  image: 'docker-dev.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.edge.version $ }}'
  version: latest
  image_pull_policy: IfNotPresent
  port: 10808
  metrics_port: 8081

  envvars:
    xds_cluster:
      type: value
      value: 'edge'
    proxy_dynamic:
      type: 'value'
      value: 'true'
    xds_zone:
      type: 'value'
      value: '{{ .Values.global.zone }}'
    xds_host:
      type: 'value'
      value: 'control.{{ .Release.Namespace }}.svc'
    xds_port:
      type: 'value'
      value: '{{ .Values.global.control_port }}'
    xds_node_id:
      type: 'value'
      value: 'default'
    envoy_admin_log_path:
      type: 'value'
      value: '/dev/stdout'

 
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

  egress:
    secret:
      secret_name: greymatter-edge-egress
      mount_point: /etc/proxy/tls/sidecar/
  ingress:
    secret:
      secret_name: greymatter-edge-ingress
      mount_point: /etc/proxy/tls/edge/

    # For ingress, you can specify which API verison  to use
    apiVersion: voyager.appscode.com/v1beta1

    # Specific annotations for your deployment
    # Choosing the ingress.appscode.com/type is important and depends on your environment type.
    #   - If using EKS, you need to configure the Type as LoadBalancder 
    #   - If using voyager, you need to configure the type as NodePort
    annotations:
      kubernetes.io/ingress.class: 'voyager'
      ingress.appscode.com/ssl-passthrough: 'true'
      ingress.appscode.com/type: NodePort

    # Provide the rule set you want your ingress controller to use
    rules:
      - tcp:
          port: '80'
          nodePort: '30001'
          backend:
            serviceName: edge
            servicePort: 8080
      - tcp:
          port: '443'
          nodePort: '30000'
          backend:
            serviceName: edge
            servicePort: 8080 
