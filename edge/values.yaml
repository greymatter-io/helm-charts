# Edge Values File

global:
  environment: kubernetes
  domain: development.deciphernow.com
  # Edge access is typically determine by <route_url_name>.<namespace>.<domain>
  # Namespace is only removed whe setting remove_namespace_from_url to true
  #   If you choose to remove the namespace from the url you must ensure your
  #   route_url_name is unique or openshift will throw errors.
  route_url_name: greymatter
  remove_namespace_from_url: 'false'
  exhibitor:
    replicas: 1
  xds:
    port: 18000
    cluster: greymatter

ingress_config:
  default_url: '{{ .Values.global.route_url_name }}.{{ .Release.Namespace }}.{{ .Values.global.domain }}'
  custom_url: '{{ .Values.global.route_url_name }}.{{ .Values.global.domain }}'

edge:
  egress_use_tls: 'true'
  inheaders_enabled: 'true'
  obs_enabled: 'false'
  obs_full_response: 'false'
  base_path: /services/edge/0.7.1
  acl_enabled: 'false'
  imagePullPolicy: Always
  ingress_use_tls: true
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

  # These are the certs that the edge will use for ingress traffic into the mesh
  create_edge_secret: false
  certificates:
    name: edge
    ca: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    cert: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    key: |-
      -----BEGIN RSA PRIVATE KEY-----
      ...
      -----END RSA PRIVATE KEY-----

sidecar:
  version: '{{- $.Values.global.edge.sidecar.version | default "0.8.0" }}'
  image: 'docker.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
  metrics_key_function: depth
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  envvars:
    - name: egress_use_tls
      type: value
      value: '{{ .Values.edge.egress_use_tls }}'
    - name: egress_ca_cert_path
      type: 'value'
      value: '/etc/proxy/tls/sidecar/ca.crt'
    - name: egress_cert_path
      type: 'value'
      value: '/etc/proxy/tls/sidecar/server.crt'
    - name: egress_key_path
      type: 'value'
      value: '/etc/proxy/tls/sidecar/server.key'
    - name: ingress_use_tls
      type: 'value'
      value: 'true'
    - name: ingress_ca_cert_path
      type: 'value'
      value: '/etc/proxy/tls/edge/ca.crt'
    - name: ingress_cert_path
      type: 'value'
      value: '/etc/proxy/tls/edge/server.crt'
    - name: ingress_key_path
      type: 'value'
      value: '/etc/proxy/tls/edge/server.key'
    - name: inheaders_enabled
      type: 'value'
      value: '{{ .Values.edge.inheaders_enabled }}'
    - name: obs_enabled
      type: 'value'
      value: '{{ .Values.edge.obs_enabled }}'
    - name: obs_full_response
      type: 'value'
      value: '{{ .Values.edge.obs_full_response }}'
    - name: port
      type: 'value'
      value: '8443'
    - name: proxy_dynamic
      type: 'value'
      value: 'true'
    - name: acl_enabled
      type: 'value'
      value: '{{ .Values.edge.acl_enabled }}'

  # Set this to true if you are attempting to deploy Catalog by itself.
  # Ideally, catalog is deployed as a dependency to Grey Matter, which creates the
  # sidecar secret, but if individual testing is being done, the sidecar secret will
  # need to be created.
  create_sidecar_secret: false
  certificates:
    name: sidecar
    ca: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    cert: |-
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    key: |-
      -----BEGIN RSA PRIVATE KEY-----
      ...
      -----END RSA PRIVATE KEY-----
