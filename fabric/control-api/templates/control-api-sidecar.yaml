---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.controlApi.name }}-sidecar
  namespace: {{ .Release.Namespace }}
data:
  config.yaml: |-
    node:
      id: "default"
      cluster: "{{ .Values.controlApi.name }}"
      locality:
        zone: {{ .Values.global.zone}}
        region: default-region
    dynamic_resources:
      ads_config:
        api_type: GRPC
        transport_api_version: V3
        grpc_services:
          envoy_grpc:
            cluster_name: xds_cluster
      cds_config:
        resource_api_version: V3
        ads: {}
      lds_config:
        resource_api_version: V3
        ads: {}
    static_resources:
      listeners:
        - name: {{ .Values.controlApi.name }}:10808
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10808
          filter_chains:
            - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  forward_client_cert_details: sanitize_set
                  set_current_client_cert_details:
                      uri: true
                  codec_type: AUTO
                  access_log:
                    - name: envoy.access_loggers.file
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                        path: "/dev/stdout"
                  stat_prefix: ingress
                  route_config:
                    name: local
                    virtual_hosts:
                      - name: local
                        domains: ["*"]
                        routes:
                          - match:
                              prefix: "/"
                            route:
                              cluster: local
                  http_filters:
                    - name: envoy.filters.http.router
                      typed_config: {}
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  common_tls_context:
                    tls_certificate_sds_secret_configs:
                      - name: "spiffe://{{ .Values.global.spire.trust_domain}}/{{ .Values.controlApi.name }}"
                        sds_config:
                          resource_api_version: V3
                          api_config_source:
                            api_type: GRPC
                            transport_api_version: V3
                            grpc_services:
                              envoy_grpc:
                                cluster_name: spire_agent
                    tls_params:
                      ecdh_curves:
                        - X25519:P-256:P-521:P-384
        - name: {{ .Values.mesh_redis.name }}-egress:10929
          address:
            socket_address:
              address: 127.0.0.1
              port_value: 10929
          filter_chains:
            - filters:
              - name: envoy.filters.network.tcp_proxy
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                  stat_prefix: redis_egress
                  cluster: redis
      clusters:
        - name: local
          connect_timeout: 5s
          type: STATIC
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: local
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: 127.0.0.1
                        port_value: 5555
        - name: spire_agent
          connect_timeout: 5s
          http2_protocol_options: {}
          type: STATIC
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: spire_agent
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      pipe:
                        path: /run/spire/socket/agent.sock
        - name: xds_cluster
          connect_timeout: 5s
          http2_protocol_options: {}
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: xds_cluster
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: control.{{ .Release.Namespace }}.svc
                        port_value: 50000
        - name: redis
          connect_timeout: 5s
          http2_protocol_options: {}
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: redis
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: {{ .Values.mesh_redis.name }}.{{ .Release.Namespace }}.svc
                        port_value: 10808
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                tls_certificate_sds_secret_configs:
                  - name: "spiffe://{{ .Values.global.spire.trust_domain}}/{{ .Values.controlApi.name }}"
                    sds_config:
                      resource_api_version: V3
                      api_config_source:
                        api_type: GRPC
                        transport_api_version: V3
                        grpc_services:
                          envoy_grpc:
                            cluster_name: spire_agent
                tls_params:
                  ecdh_curves:
                    - X25519:P-256:P-521:P-384
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 8001