global:

  imagePullSecret: docker.secret
  
  environment: openshift
  domain: staging.deciphernow.com
  route_url_name: greymatter
  remove_namespace_from_url: false
  zone: zone-default-zone
  mesh_tls:
    enabled: true
    use_provided_certs: true
    # This is the DN of the cert being used in the mesh. The Helm charts will add whitelist the DN throughout the mesh
    dn: C=US,ST=Virginia,L=Alexandria,O=Decipher Technology Studios,OU=Engineering,CN=*.greymatter.svc.cluster.local
  # Turns on tls for control api and configures control to talk to it using tls
  control_api_tls: false
  kafka:
    replicas: 3
  dashboard:
    version: 3.3.1
    sidecar:
      version: latest
  catalog:
    version: latest
    sidecar:
      version: latest
  sense:
    enabled: false
  consul:
    enabled: false
    host: ''
    port: 8500
  edge:
    enableTLS: true
    # This is the DN of the new certificate issued to the edge for internal mesh communication. It needs to be whitelisted by the proxies
    egressDn: C=US,ST=Virginia,L=Alexandria,O=Decipher Technology Studios,OU=Engineering,CN=edge
    certPath: /etc/proxy/tls/edge
    version: 1.1.1
  spire:
    enabled: false
  waiter:
    serviceAccount:
      create: true
      name: waiter-sa
  control:
    # This specifies the service name that all XDS clients will try to connect to
    name: control
    port: 50000
    version: latest
  data:
    jwt_prefix: '/jwt'
  internal-data:
    jwt_prefix: '/jwt'

  sidecar:
    version: latest
    envvars:
      # You can customize the sidecar environment variables mesh-wide to enable features in the mesh
      # All the sidecar envvars are documented in `./greymatter/README.md`, and the custom service-level defaults are documented in the services `configuration.md` files.
      # These are sorted by how different the values are for the sidecars running on different services. The options are "all the same", "all except XDS". and "different"
      # TODO: update each service to use default global values and only set the ones that are different.
      # All the same
      proxy_dynamic:
        type: 'value'
        value: 'true'
      xds_zone:
        type: 'value'
        value: '{{ .Values.global.zone }}'
      xds_cluster:
        type: 'value'
        value: ''
      xds_host:
        type: 'value'
        value: 'control.{{ .Release.Namespace }}.svc'
      xds_port:
        type: 'value'
        value: '{{ .Values.global.control.port }}'
      xds_node_id:
        type: 'value'
        value: 'default'
      envoy_admin_log_path:
        type: 'value'
        value: '/dev/stdout'
      # There may be more sidecar environment variables, but we haven't added them here yet.
      # However, to use an env var with the sidecar, even if it doesn't have a global default,
      # it needs to be set globally as either a value or a secret

control:
  control:
    # Configures certs for control to talk to control api via tls. Only used when global.control_api_tls=true.
    secret:
      secret_name: controlapitls
      mountPoint: /service-certs
      insecure: true
      secretKeys:
        cert: server.crt
        key: server.key
    serviceAccount:
      create: true
    image: docker-dev.production.deciphernow.com/deciphernow/gm-control:latest
    envvars:
      gm_control_console_level:
        type: 'value'
        value: 'info'
      #gm_control_cmd:
      #  type: 'value'
      #  value: 'consul'
      #gm_control_consul_dc:
      #  type: 'value'
      #  value: 'dc1'
      #gm_control_consul_hostport:
      #  type: 'value'
      #  value: '{{ .Values.global.consul.host }}:{{ .Values.global.consul.port }}'

gm-control-api:
  gmControlApi:
    secret:
      secret_name: controlapitls
      mountPoint: /service-certs
      insecure: true
    image: 'docker-dev.production.deciphernow.com/deciphernow/gm-control-api:latest'
    zone: '{{ .Values.global.zone }}'
    init:
      image: docker-dev.production.deciphernow.com/deciphernow/greymatter:latest
  sidecar:
    image: 'docker-dev.production.deciphernow.com/deciphernow/gm-proxy:latest'