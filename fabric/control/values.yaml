# Default values for gm-control

global:
  image_pull_secret: docker.secret    # Used as imagePullSecrets value for each subchart
  environment: openshift              # Deployment environment, one of "eks", "kuberenetes", or "openshift"
  zone: zone-default-zone             # Used to configure control and control-api environment variables
  consul:                             # Whether to use consul for service discovery
    enabled: false
    host: ''
    port: 8500

waiter:                             # Configures the init container used to wait on various deployments to be ready
  image: deciphernow/k8s-waiter:latest
  service_account: 
    create: true
    name: waiter-sa

control:
  name: 'control'
  port: 50000
  display_name: 'Control'
  replicas: 1
  version: latest
  image: 'docker-dev.production.deciphernow.com/deciphernow/gm-control:{{ $.Values.control.version }}'
  image_pull_policy: IfNotPresent
  additionalNamespacesToControl: 
  secret:
    enabled: true
    secret_name: controlapitls
    mountPoint: /service-certs
    insecure: true
    secretKeys:
      cert: server.crt
      key: server.key
  service_account:
    create: true
    name: control-sa
  envvars:
    gm_control_api_insecure:
      type: 'value'
      value: "{{ .Values.control.secret.insecure }}"
    gm_control_api_ssl:
      type: 'value'
      value: "{{ .Values.control.secret.enabled }}"
    gm_control_api_sslcert:
      type: 'value'
      value: "{{ .Values.control.secret.mountPoint }}/{{ .Values.control.secret.secretKeys.cert }}"
    gm_control_api_sslkey:
      type: 'value'
      value: "{{ .Values.control.secret.mountPoint }}/{{ .Values.control.secret.secretKeys.key }}"
    gm_control_console_level:
      type: 'value'
      value: 'info'
    gm_control_api_key:
      type: 'value'
      value: 'xxx'
    gm_control_api_zone_name:
      type: 'value'
      value: '{{ .Values.global.zone }}'
    gm_control_api_host:
      type: 'value'
      value: 'control-api:5555'
    gm_control_cmd:
      type: 'value'
      value: 'kubernetes'
    gm_control_xds_resolve_dns:
      type: 'value'
      value: 'true'
    gm_control_xds_ads_enabled:
      type: 'value'
      value: 'true'
    gm_control_kubernetes_cluster_label:
      type: 'value'
      value: 'gm.proxy'
    gm_control_kubernetes_port_name:
      type: 'value'
      value: 'proxy'
    gm_control_kubernetes_namespaces:
      type: 'value'
      value: '{{ include "control.namespaces" . }}'
    # The following values are not applied. Change the 'type' to 'value' to use these variables.
    gm_control_diff_dry_run:
      type: 'null'
      value: 'true'
    gm_control_file_format:
      type: 'null'
      value: 'yaml'
    gm_control_file_filename:
      type: 'null'
      value: '/app/routes.yaml'
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

sidecar:
  version: latest
  image: 'docker-dev.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
  image_pull_policy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  envvars:
    xds_cluster:
      type: value
      value: 'control'
    proxy_dynamic:
      type: 'value'
      value: 'true'
    xds_zone:
      type: 'value'
      value: '{{ .Values.global.zone }}'
    xds_host:
      type: 'value'
      value: 'control.{{ .Release.Namespace }}.svc'
    xds_port:
      type: 'value'
      value: '{{ .Values.global.control.port }}'
    xds_node_id:
      type: 'value'
      value: 'default'
    envoy_admin_log_path:
      type: 'value'
      value: '/dev/stdout'
  secret:
    secret_name: sidecar-certs
    mountPoint: /etc/proxy/tls/sidecar
    secretKeys:
      ca: ca.crt
      cert: server.crt
      key: server.key    
