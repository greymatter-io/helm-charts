kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    {{ .Values.global.control.cluster_label }}: {{ .Values.redis.name }}
  name: {{ .Values.redis.name }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Values.redis.name }}
  podManagementPolicy: Parallel
  replicas: {{ .Values.redis.replica_count  }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{ .Values.global.control.cluster_label }}: {{ .Values.redis.name }}
      deployment: {{ .Values.redis.name }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{ .Values.global.control.cluster_label }}: {{ .Values.redis.name }}
        deployment: {{ .Values.redis.name }}
        greymatter: fabric
    spec:
      {{- if and .Values.global.environment (eq .Values.global.environment "eks") }}
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
      {{- end }}
      imagePullSecrets:
      - name: {{ .Values.global.image_pull_secret }}
      containers:
        - name: redis
          image: {{ tpl .Values.redis.image $ | quote }}
          imagePullPolicy: {{ .Values.redis.image_pull_policy }}
          command:
            - "redis-server"
          args:
            - "--appendonly"
            - "yes"
            - "--requirepass"
            - "$(REDIS_PASSWORD)"
          env:
          {{- include "envvars" (dict "envvar" .Values.redis.envvars "top" $) | indent 12 }}
        {{- if .Values.redis.resources }}
          resources:
{{ toYaml .Values.redis.resources | indent 12 }}
        {{- end }}
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          volumeMounts:
          - mountPath: {{ .Values.redis.storage.mount_path }}
            name: redis-pvc
        - name: sidecar
          args:
            - -c
            - /etc/greymatter/config.yaml
          command:
            - /app/gm-proxy
          image: {{ tpl .Values.sidecar.image $ | quote }}
          imagePullPolicy: {{ .Values.sidecar.image_pull_policy }}

          {{- if .Values.sidecar.resources }}
          resources:
{{ toYaml .Values.sidecar.resources | indent 12 }}
          {{- end }}
          ports:
            - name: proxy
              containerPort: {{ .Values.sidecar.port }}
            - name: metrics
              containerPort: {{ .Values.sidecar.metrics_port }}

          env:
          {{- include "sidecar.envvars" . | indent 12 }}
            {{- if .Values.global.spire.enabled }}
            - name: SPIRE_PATH
              value: {{ .Values.global.spire.path }}
            {{- end }}
          volumeMounts:
            - name: sidecar-config
              mountPath: /etc/greymatter
              readOnly: true
          {{- if .Values.global.spire.enabled }}
          {{- include "spire_volume_mount" . | indent 12 }}
          {{- else if .Values.sidecar.secret.enabled }}
          {{- include "sidecar_volume_certs_mount" . | indent 12 }}
          {{- end }}
      volumes:
      - name: sidecar-config
        configMap:
          name: {{ .Values.redis.name }}-sidecar
      - name: spire-socket
        hostPath:
          path: /run/spire/socket
          type: DirectoryOrCreate
  volumeClaimTemplates:
  - metadata:
      name: redis-pvc
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.redis.storage.size }}Gi
    {{- if .Values.redis.storage.storage_class }}
    {{- if (eq "-" .Values.redis.storage.storage_class) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.redis.storage.storage_class }}"
    {{- end }}
    {{- end }}
