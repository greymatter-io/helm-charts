kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    {{ .Values.global.control.cluster_label }}: {{ .Values.redis.name }}
  name: {{ .Values.redis.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.redis.replica_count  }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{ .Values.global.control.cluster_label }}: {{ .Values.redis.name }}
      deployment: {{ .Values.redis.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{ .Values.global.control.cluster_label }}: {{ .Values.redis.name }}
        deployment: {{ .Values.redis.name }}
        greymatter: fabric
    spec:
      containers:
        - name: redis
          image: {{ .Values.redis.image }}
          {{- if .Values.redis.command }}
          command:
{{ toYaml .Values.redis.command | indent 12 }}
          {{- end }}
          {{- if .Values.redis.args }}
          args:
{{ toYaml .Values.redis.args | indent 12 }}
          {{- end }}
          env:
          {{- include "jwt.envvars" (dict "envvar" .Values.redis.envvars "top" $) | indent 12 }}
          imagePullPolicy: {{ .Values.redis.image_pull_policy }}
        {{- if .Values.redis.resources }}
          resources:
{{ toYaml .Values.redis.resources | indent 12 }}
        {{- end }}
      {{- if .Values.redis.private_image }}
      imagePullSecrets:
      - name: {{ .Values.global.image_pull_secret }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
