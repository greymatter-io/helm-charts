apiVersion: batch/v1
kind: Job
metadata:
  name: {{.Values.gmControlApi.name}}-init
spec:
  template:
    metadata:
      name: {{.Values.gmControlApi.name}}-init
    spec:
      restartPolicy: "Never"
      # We need a SA with read access to the `Endpoints` resource
      serviceAccountName: {{ .Values.global.waiter.serviceAccount.name }}
      initContainers:
        - name: ensure-gm-control-api
          image: {{ .Values.global.waiter.image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE
              value: {{ .Values.gmControlApi.name }}
      containers:
        - image: {{ tpl .Values.gmControlApi.init.image . }}
          name: {{ .Values.gmControlApi.name }}-init
          imagePullPolicy: {{ .Values.gmControlApi.init.imagePullPolicy }}
          command: ["/tmp/bootstrap/bootstrap.sh"]
          env:
          {{- include "envvars" (dict "envvar" .Values.gmControlApi.init.envvars "top" $) | indent 10 }}
          {{- if .Values.global.control_api_tls  }}
          - name: GREYMATTER_API_SSL
            value: {{ .Values.global.control_api_tls | quote }}
          - name: GREYMATTER_API_INSECURE
            value: {{ .Values.gmControlApi.ssl.insecure | quote }}
          - name: GREYMATTER_API_SSLCERT
            value: {{ .Values.gmControlApi.ssl.mountPoint}}/server.crt
          - name: GREYMATTER_API_SSLKEY
            value: {{ .Values.gmControlApi.ssl.mountPoint}}/server.key
          {{- end }}
          volumeMounts:
            {{- if .Values.global.control_api_tls }}
            - name: service-certs
              mountPath: {{ .Values.gmControlApi.ssl.mountPoint }}
            {{- end }}
          {{- range $name, $service := .Values.global.services }}
          {{- if $service.controlEnabled }}
            - name: service-config-volume-{{$service.serviceName}}
              mountPath: /etc/config/mesh/services/{{$service.serviceName}}
            - name: edge-config-volume-{{$service.serviceName}}
              mountPath: /etc/config/mesh/edge/{{$service.serviceName}}
          {{- end }}
          {{- end }}
            - name: special-config-volume
              mountPath: /etc/config/mesh/special
            - name: bootstrap-script-volume
              mountPath: /tmp/bootstrap
      volumes:
        {{- if .Values.global.control_api_tls }}
        - name: service-certs
          secret:
            secretName: {{ .Values.gmControlApi.ssl.name }}
            defaultMode: 0600
        {{- end }}
        {{- range $name, $service := .Values.global.services }}
        {{- if $service.controlEnabled }}
        - name: service-config-volume-{{ $service.serviceName }}
          configMap:
            name: service-{{ $service.serviceName }}-mesh-config
        - name: edge-config-volume-{{ $service.serviceName }}
          configMap:
            name: edge-{{ $service.serviceName }}-mesh-config
        {{- end }}
        {{- end }}
        - name: bootstrap-script-volume
          configMap:
            name: bootstrap-script
            defaultMode: 0777
        - name: special-config-volume
          configMap:
            name: special-mesh-config
      imagePullSecrets:
        - name: docker.secret